# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6.1
        environment:

      # Postgres image for testing
      - image: circleci/postgres:9.6.5-alpine-ram
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres

    working_directory: ~/app

    steps:
      - checkout

      - restore_cache:
          keys:
          - float-api-dependencies-{{ checksum "./functions/float-api/package.json" }}
          - user-act-api-dependencies-{{ checksum "./functions/user-act-api/package.json" }}
          - user-existence-api-dependencies-{{ checksum "./functions/user-existence-api/package.json" }}

      - save_cache:
          key: float-api-dependencies-{{ checksum "./functions/float-api/package.json" }}
          paths:
            - ./functions/float-api/node_modules

      - save_cache:
          key: user-act-api-dependencies-{{ checksum "./functions/user-act-api/package.json" }}
          paths:
            - ./functions/user-act-api/node_modules

      - save_cache:
          key: user-existence-api-dependencies-{{ checksum "./functions/user-existence-api/package.json" }}
          paths:
            - ./functions/user-existence-api/node_modules
          

      - run:
          name: run linter
          command: |
            echo "TODO: run linter"

      - run:
          name: run security check
          command: |
            echo 'TODO: run security check, SNYK, Sourceclear or similar...'

      - run:
          name: run tests
          command: |
             echo 'TODO: run tests'

      - run:
          name: build artifacts
          command: |
             echo $CIRCLE_SHA1 > last_commit.txt
             zip -r deploy_float_api_$CIRCLE_SHA1.zip ./functions/float-api
             zip -r deploy_user_act_$CIRCLE_SHA1.zip ./functions/user-act-api
             zip -r deploy_user_existence_api_$CIRCLE_SHA1.zip ./functions/user-existence-api

      - run:
          name: handle cloud components
          command: |
             wget -O terraform.zip https://releases.hashicorp.com/terraform/0.12.0/terraform_0.12.0_linux_amd64.zip
             unzip terraform.zip -d ~/terraform_extracted

             export PATH="$HOME/terraform_extracted:$PATH"
             cd ./terraform
             terraform init
             terraform plan -var 'aws_default_region=us-east-1' -var 'aws_access_key=$TERRAFORM_AWS_ACCESS_KEY' -var 'aws_secret_access_key=$TERRAFORM_AWS_SECRET_ACCESS_KEY' -var 'db_user=aaa' -var 'db_password=bbb' 


             if [ $CIRCLE_BRANCH == 'master' || $CIRCLE_BRANCH == 'staging' ] ; then
                echo "On branch $CIRCLE_BRANCH, handling cloud components."
             fi

      - run:
          name: upload artifacts
          command: |

             if [ $CIRCLE_BRANCH == 'master' or $CIRCLE_BRANCH == 'staging' ] ; then
                echo "On branch $CIRCLE_BRANCH, uploading artifacts."
             fi



