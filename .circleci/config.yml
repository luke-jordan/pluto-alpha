# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6.1
        environment:

      # Postgres image for testing
      - image: circleci/postgres:9.6.5-alpine-ram
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres

    working_directory: ~/app

    steps:
      - checkout

      - restore_cache:
          keys:
          - float-api-dependencies-{{ checksum "./functions/float-api/package.json" }}
          - user-act-api-dependencies-{{ checksum "./functions/user-act-api/package.json" }}
          - user-existence-api-dependencies-{{ checksum "./functions/user-existence-api/package.json" }}

      - run:
          name: a
          command: |
            echo "Hi"

      - save_cache:
          key: float-api-dependencies-{{ checksum "./functions/float-api/package.json" }}
          paths:
            - ./functions/float-api/node_modules

      - save_cache:
          key: user-act-api-dependencies-{{ checksum "./functions/user-act-api/package.json" }}
          paths:
            - ./functions/user-act-api/node_modules

      - save_cache:
          key: user-existence-api-dependencies-{{ checksum "./functions/user-existence-api/package.json" }}
          paths:
            - ./functions/user-existence-api/node_modules
          

      - run:
          name: run linter
          command: |
            echo "TODO: run linter"

      - run:
          name: run security check
          command: |
            echo 'TODO: run security check, SNYK, Sourceclear or similar...'

      - run:
          name: run tests
          command: |
             echo 'TODO: run tests'

      - run:
          name: build artifacts
          command: |
             echo $CIRCLE_SHA1 > last_commit.txt
             zip -r deploy_$CIRCLE_SHA1.zip .

      - run:
          name: deploy artifacts
          command: |

             if [ $CIRCLE_BRANCH == 'master' ] ; then
                echo "On branch master, deploying artifacts."
             fi



